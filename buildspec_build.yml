version: 0.2
env:
  variables:
    ECR_URI: "654654515013.dkr.ecr.ap-south-1.amazonaws.com/tomcat"
    ASSUME_ROLE_ARN: "arn:aws:iam::654654515013:role/eks-access-for-codebuild"
    CLUSTER_NAME: "poc-eks"
    REGION: "ap-south-1"
    ACC_NO: "654654515013"
    BUCKET_NAME: "site-loading-test-bucket"

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:

    - echo Installing app dependencies...
    - curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.15/2023-01-11/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    - echo Installing SonarQube Scanner...
    - curl -o sonar-scanner-cli.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
    - unzip sonar-scanner-cli.zip -d /opt
    - export PATH=$PATH:/opt/sonar-scanner-4.6.2.2472-linux/bin
    - sudo yum install docker -y
    - sudo yum install gettext -y
    # Hadolint installation 
    - wget -O hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
    - sudo cp hadolint /usr/local/bin/hadolint
    - sudo chmod +x /usr/local/bin/hadolint
    - hadolint --version
    #kubelinetr
    - wget https://github.com/stackrox/kube-linter/releases/download/0.2.5/kube-linter-linux.tar.gz
    - tar -xvf kube-linter-linux.tar.gz
    - mv kube-linter /usr/local/bin/



  pre_build:
    commands:
    - |
      mvn clean verify sonar:sonar \
      -Dsonar.projectKey=test \
      -Dsonar.projectName='test' \
      -Dsonar.host.url=http://15.207.247.240:9000 \
      -Dsonar.token=squ_5515e3ec6e39d276a729541251413c251c343807
    - mvn test

  build:
    commands:
    - aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ACC_NO}.dkr.ecr.${REGION}.amazonaws.com
    - docker build -t tomcat -f files/Dockerfile .
    - sudo docker tag tomcat:latest ${ACC_NO}.dkr.ecr.${REGION}.amazonaws.com/tomcat:$CODEBUILD_BUILD_NUMBER
    - sudo docker tag tomcat:latest ${ACC_NO}.dkr.ecr.${REGION}.amazonaws.com/tomcat:latest
    - sudo docker push ${ACC_NO}.dkr.ecr.${REGION}.amazonaws.com/tomcat:$CODEBUILD_BUILD_NUMBER
    - sudo docker push ${ACC_NO}.dkr.ecr.${REGION}.amazonaws.com/tomcat:latest

  post_build:
    commands:
    #  Docker file validation using Hadolint 
    - hadolint --config hadolint.yml Dockerfile 2>&1 | tee hadolint.log

    # kube-linter checks 
    - kube-linter checks list
    - kube-linter lint files/deployment.yml 2>&1 | tee kube-linter.log
    - kube-linter lint files/service.yml 2>&1 | tee -a kube-linter.log
    # kubectl dry run
    - creds=$(aws sts assume-role --role-arn "${ASSUME_ROLE_ARN}" --role-session-name "test-cli" --duration-seconds 900)
    - export AWS_ACCESS_KEY_ID="$(echo ${creds} | jq -r '.Credentials.AccessKeyId')"
    - export AWS_SECRET_ACCESS_KEY="$(echo ${creds} | jq -r '.Credentials.SecretAccessKey')"
    - export AWS_SESSION_TOKEN="$(echo ${creds} | jq -r '.Credentials.SessionToken')"
    - export AWS_EXPIRATION=$(echo ${creds} | jq -r '.Credentials.Expiration')

    - kubectl apply -f files/deployment.yml --dry-run=client > deployment_changes.log

    - zip reports.zip deployment_changes.log kube-linter.log hadolint.log
    # push reports to s3 bucket 
    - aws s3 cp reports.zip s3://${BUCKET_NAME}/reports.zip
artifacts:
  files:
  - 'hadolint.log'
  - 'kube-linter.log'
  - 'deployment_changes.log'
